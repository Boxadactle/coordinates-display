plugins {
    id 'com.github.johnrengelman.shadow'
    id "me.shedaniel.unified-publishing"
}

architectury {
    platformSetupLoomIde()
    forge {}
}

loom {
    forge {
        mixinConfig "coordinatesdisplay.mixins.json", "coordinatesdisplay-forge.mixins.json"
    }
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

configurations.configureEach {
    resolutionStrategy.force("net.sf.jopt-simple:jopt-simple:5.0.4")
}

dependencies {
    forge "net.minecraftforge:forge:${rootProject.minecraft_version}-${rootProject.forge_version}"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')

    modImplementation("dev.boxadactle:Boxlib-forge:${rootProject.boxlib_version}") { transitive = true }
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

unifiedPublishing {
    project {
        displayName = "[Forge ${rootProject.minecraft_version}] v$rootProject.mod_version"
        version = "$rootProject.version-forge"
        changelog = new File(rootProject.rootDir, rootProject.changelog_file).text
        releaseType = rootProject.release_type
        gameVersions = Arrays.asList(rootProject.game_versions.split(","))
        gameLoaders = [ "forge" ]

        mainPublication tasks.remapJar

        var cfToken = System.getenv("CURSEFORGE_TOKEN")
        if (cfToken != null) {
            curseforge {
                token = cfToken
                id = rootProject.project_id_curseforge
            }
        }

        var modrinthToken = System.getenv("MODRINTH_TOKEN")
        if (modrinthToken != null) {
            modrinth {
                token = modrinthToken
                id = rootProject.project_id_modrinth
                version = "${rootProject.mod_version}-${project.name}"
            }
        }
    }
}