plugins {
    id 'com.github.johnrengelman.shadow'
    id "me.shedaniel.unified-publishing"
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    modImplementation "dev.boxadactle:Boxlib-neoforge:$rootProject.boxlib_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

unifiedPublishing {
    project {
        displayName = "[NeoForge ${rootProject.minecraft_version}] v$rootProject.mod_version"
        version = "$rootProject.version-neoforge"
        changelog = "A changelog can be found here: ${rootProject.releases_page}tag/$rootProject.mod_version"
        releaseType = rootProject.release_type
        gameVersions = Arrays.asList(rootProject.game_versions.split(","))
        gameLoaders = [ "neoforge" ]
        relations {
            it.depends {
                it.curseforge = "boxlib"
                it.modrinth = "boxlib"
            }
        }

        mainPublication tasks.remapJar

        var cfToken = System.getenv("CURSEFORGE_TOKEN")
        if (cfToken != null) {
            curseforge {
                token = cfToken
                id = rootProject.project_id_curseforge
            }
        }

        var modrinthToken = System.getenv("MODRINTH_TOKEN")
        if (modrinthToken != null) {
            modrinth {
                token = modrinthToken
                id = "3mW8PdUo"
                version = "${rootProject.mod_version}-${project.name}"
            }
        }
    }
}